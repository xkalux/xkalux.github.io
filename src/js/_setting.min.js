import { commands } from "./_terminal_completion.min.js"; import { functions } from "./_terminal_functions.min.js"; import { local } from "../appscript/classx.min.js"; const settingCommands = { "set-tetris-game-font-size": "--tetris-game-font-size", "set-tetris-game-letter-spacing": "--tetris-game-letter-spacing", "set-tetris-game-line-height": "--tetris-game-line-height", "set-tetris-text-font-size": "--tetris-text-font-size", "set-tetris-game-padding-left": "--tetris-game-padding-left", "set-tetris-game-padding-top": "--tetris-game-padding-top", "set-tetris-game-padding-bottom": "--tetris-game-padding-bottom", "set-tetris-game-padding-right": "--tetris-game-padding-right", "set-tetris-font-family": "--tetris-font-family", "set-tetris-game-start-background-color": "--tetris-game-start-background-color", "set-tetris-text-font-color": "--tetris-text-font-color", "set-tetris-game-panel-color": "--tetris-game-panel-color", "set-tetris-game-panel-hover-color": "--tetris-game-panel-hover-color", "set-tetris-game-border-color": "--tetris-game-border-color", "set-tetris-game-font-0-color": "--tetris-game-font-0-color", "set-tetris-game-font-1-color": "--tetris-game-font-1-color", "set-tetris-game-font-2-color": "--tetris-game-font-2-color", "set-tetris-game-font-3-color": "--tetris-game-font-3-color", "set-tetris-game-font-4-color": "--tetris-game-font-4-color", "set-tetris-game-font-5-color": "--tetris-game-font-5-color", "set-tetris-game-font-6-color": "--tetris-game-font-6-color", "set-tetris-game-font-7-color": "--tetris-game-font-7-color", "set-tetris-game-font-8-color": "--tetris-game-font-8-color", "set-tetris-game-font-9-color": "--tetris-game-font-9-color", "set-tetris-scoreboard-title-font-color:": "--tetris-scoreboard-title-font-color", "set-tetris-scoreboard-font-color": "--tetris-scoreboard-font-color", "set-tetris-scoreboard-hover-font-color": "--tetris-scoreboard-hover-font-color", "set-tetris-on-pause-color": "--tetris-on-pause-color", "set-window-border-color": "--window-border-color", "set-window-active-border-color": "--window-border-color-active", "set-window-active-border-box-shadow-color": "--window-border-box-shadow-active", "set-window-active-content-background-color": "--window-content-background-color-active", "set-window-active-content-color": "--window-content-color-active", "set-window-active-title-font-color": "--window-title-font-color-active", "set-window-active-buttons-border-color": "--window-buttons-border-color-active", "set-window-header-border-bottom-color": "--window-header-border-bottom", "set-window-header-active-border-bottom-color": "--window-header-border-bottom-active", "set-window-header-background-color": "--window-header-background-color", "set-window-header-active-background-color": "--window-header-background-color-active", "set-window-buttons-border-color": "--window-buttons-border-color", "set-window-close-buttons-hover": "--window-buttons-a-btn-close-hover", "set-window-minimize-buttons-hover": "--window-buttons-a-btn-min-hover", "set-window-maximize-buttons-hover": "--window-buttons-a-btn-max-hover", "set-window-title-font-weight": "--window-title-font-weight", "set-window-title-font-color": "--window-title-font-color", "set-window-title-font-family": "--window-title-font-family", "set-window-title-font-size": "--window-title-font-size", "set-window-content-color": "--window-content-color", "set-window-content-background-color": "--window-content-background-color", "set-window-content-font-family": "--window-content-font-family", "set-window-content-font-size": "--window-content-font-size", "set-shortcut-color": "--shortcut-color", "set-shortcut-font-family": "--shortcut-font-family", "set-shortcut-font-size": "--shortcut-font-size", "set-loading-background-color": "--loading-background-color", "set-loading-border-color": "--loading-border-color", "set-loading-font-color": "--loading-font-color", "set-loading-font-family": "--loading-font-family", "set-background-radial-gradient-0": "--background-radial-gradient-0", "set-background-radial-gradient-1": "--background-radial-gradient-1", "set-folder-text-color": "--folder-text-color", "set-folder-text-color-active": "--folder-text-color-active", "set-folder-text-size": "--folder-text-size", "set-folder-text-hover-color": "--folder-text-hover-color", "set-folder-text-hover-background-color": "--folder-text-background-hover-color", "set-scrollbar-color": "--folder-scrollbar-color", "set-scrollbar-active-color": "--folder-active-scrollbar-color", "set-body-font-family": "--body-font-family", "set-user-profile-font-family": "--user-profile-font-family", "set-user-profile-font-color": "--user-profile-font-color", "set-user-profile-title-font-size": "--user-profile-title-font-size", "set-user-profile-sub-title-font-size": "--user-profile-sub-title-font-size", "set-score-report-hover-background-color": "--score-report-hover-background-color", "set-score-report-category-font-family": "--score-report-category-font-family", "set-score-report-category-font-size": "--score-report-category-font-size", "set-score-report-category-font-color": "--score-report-category-font-color", "set-score-report-header-font-family": "--score-report-header-font-family", "set-score-report-header-font-size": "--score-report-header-font-size", "set-score-report-header-font-color": "--score-report-header-font-color", "set-score-report-data-font-family": "--score-report-data-font-family", "set-score-report-data-font-size": "--score-report-data-font-size", "set-score-report-data-font-color": "--score-report-data-font-color", "set-score-report-underline-color": "--score-report-underline-color" }, fonts = { "-JetBrains_Mono": "JetBrains Mono", "-VT323": "VT323", "-Chakra_Petch": "Chakra Petch", "-Fira_Sans_Condensed": "Fira Sans Condensed", "-IBM_Plex_Sans_Thai": "IBM Plex Sans Thai", "-IBM_Plex_Sans_Thai_Looped": "IBM Plex Sans Thai Looped", "-Kanit": "Kanit", "-Krub": "Krub", "-Niramit": "Niramit", "-Pattaya": "Pattaya", "-Prompt": "Prompt", "-Sarabun": "Sarabun", "-VT323": "VT323" }; function initSettingCommandCompletions() { for (const t of Object.keys(settingCommands)) { const o = "" + t; let e = { options: [], args: [] }; o.includes("-family") && (e.args = Object.keys(fonts)), commands[o] = e, functions[o] = function (t) { if (o.includes("-family") && Object.keys(fonts).some((o => o === t)) && (t = fonts[t]), setting_key) { const e = local(setting_key); let r = {}; e && (r = JSON.parse(e)), r[o] = t, localStorage.setItem(`${setting_key}`, JSON.stringify(r)) } document.documentElement.style.setProperty(settingCommands[o], t), this.echo(" set: " + o + " = " + t + " ðŸ˜Š") } } } let setting_key; function setSettingKey(t) { setting_key = t } function getSettingKey() { return setting_key } function LoadSetting() { const t = local("user"); if (!t) return; const o = JSON.parse(t); setting_key = "setting-" + o.email; const e = local(setting_key); if (!e) return; const r = JSON.parse(e); for (const t of Object.keys(r)) { const o = t, e = r[t]; document.documentElement.style.setProperty(settingCommands[o], e) } } export { fonts, settingCommands, initSettingCommandCompletions, LoadSetting, setSettingKey, getSettingKey }