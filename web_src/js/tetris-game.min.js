const n = { A: [[0, 0, 1], [1, 1, 1]], a: [[0, 0, 0], [0, 0, 2], [2, 2, 2]], B: [[0, 3, 0], [3, 3, 3]], b: [[0, 4, 0], [4, 4, 4]], C: [[5, 0, 0], [5, 5, 5]], c: [[6, 0, 0], [6, 6, 6]], D: [[7, 7, 0], [0, 7, 0], [0, 7, 7]], E: [[0, 8, 8], [0, 8, 0], [8, 8, 0]], F: [[0, 0, 0], [2, 2, 2], [0, 0, 0]], f: [[0, 0, 0], [3, 3, 3], [0, 0, 0]], H: [[1, 3, 1], [3, 2, 3], [1, 3, 1]], I: [[9, 9, 9], [9, 0, 9], [9, 9, 9]], J: [[0, 0, 0], [2, 0, 2], [6, 4, 6]], K: [[1, 3], [7, 5]] }, e = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], t = [[...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e], [...e]]; let o, i, a, s = JSON.parse(JSON.stringify(t)), r = 1, l = { x: 0, y: 0, shape: void 0 }, c = [], d = 0; const f = 7; let p = 0, g = 900, h = !0, m = document.createElement("div"); m.id = "pauseElement"; let u = document.createElement("div"); u.id = "gridElement"; let x = document.createElement("div"); x.id = "scoreElement"; let v = document.createElement("div"); v.id = "displayScoreElement"; let y = document.createElement("div"); y.id = "nextBlockElement"; const P = { isPause: "isPause", isPlaying: "isPlaying", isGameOver: "isGameOver", isInit: "isInit", isWaiting: "isWaiting", isStarting: "isStarting", Reset: "Reset", SaveScore: "SaveScore" }; let w, S, E, L, b, k, C, I, M = P.isInit; function O(n, e, t, a, s) { o = s, i = a, w = n, S = e, E = t, L = E.DISPLAY_SCOREBOARD, b = w.mainscreen.querySelector("#tetris-gameplay"), function () { w.button_A.onMouseDown = () => { M === P.isPlaying && Y() }, w.button_B.onMouseDown = w.button_A.onMouseDown; const n = () => k = setInterval((() => { M === P.isPlaying && z() }), 300); w.pad.onPadLeftTouchStart = n, w.pad.onPadLeftDown = n, w.pad.onPadLeftTouchEnd = () => clearInterval(k), w.pad.onPadLeftUp = () => clearInterval(k); const e = () => C = setInterval((() => { M === P.isPlaying && $() }), 300); w.pad.onPadRightTouchStart = e, w.pad.onPadRightDown = e, w.pad.onPadRightTouchEnd = () => clearInterval(C), w.pad.onPadRightUp = () => clearInterval(C); const t = () => I = setInterval((() => { M === P.isPlaying && U() }), 300); w.pad.onPadDownTouchStart = t, w.pad.onPadDownDown = t, w.pad.onPadDownTouchEnd = () => clearInterval(I), w.pad.onPadDownUp = () => clearInterval(I), w.button_option_2.onPress = () => { if (L === E.PLAY_GAME) { switch (M) { case P.isPlaying: M = P.isPause; break; case P.isWaiting: case P.isPause: M = P.isPlaying; break; case P.isInit: case P.isGameOver: M = P.isStarting }R(M) } }, w.button_option_1.onPress = () => { L = L === E.PLAY_GAME ? E.DISPLAY_SCOREBOARD : E.PLAY_GAME, M === P.isPlaying && (M = P.isPause), S(L), R(M) } }(), S(L), b.innerHTML = "<style>\n    font.text-0 {\n        color: var(--tetris-game-font-0-color);\n        font-weight: 900;\n    }\n    font.text-1 {\n        color: var(--tetris-game-font-1-color);\n        font-weight: 900;\n    }\n    \n    font.text-2 {\n        color: var(--tetris-game-font-2-color);\n        font-weight: 900;\n    }\n    \n    font.text-3 {\n        color: var(--tetris-game-font-3-color);\n        font-weight: 900;\n    }\n    \n    font.text-4 {\n        color: var(--tetris-game-font-4-color);\n        font-weight: 900;\n    }\n    \n    font.text-5 {\n        color: var(--tetris-game-font-5-color);\n        font-weight: 900;\n    }\n    \n    font.text-6 {\n        color: var(--tetris-game-font-6-color);\n        font-weight: 900;\n    }\n    \n    font.text-7 {\n        color: var(--tetris-game-font-7-color);\n        font-weight: 900;\n    }\n    \n    font.text-8 {\n        color: var(--tetris-game-font-8-color);\n        font-weight: 900;\n    }\n    \n    font.text-9 {\n        color: var(--tetris-game-font-9-color);\n        font-weight: 900;\n    }\n\n    #scoreElement{\n        margin-bottom: 5px;\n        display: flex;\n        justify-content: space-between;\n        max-height:60px;\n        min-height:60px;\n        overflow: hidden;\n        align-items: end;\n\n        & .next-wraper{\n            display: flex;\n            align-items: end;\n            max-height:60px;\n            min-height:60px;\n            \n            & #nextBlockElement{\n                display: flex;\n                align-items: end;\n                width:60px;\n                padding-right:10px;\n                padding-left:10px;\n                padding-top:0px;\n                padding-bottom:0px;\n\n                & .next-block{\n                    margin: 0;\n                    align-items: end;\n\n                    & p {\n                        margin: 0;\n                        padding: 0;\n                        font-size: 1.1rem;\n                        letter-spacing: -0.35rem;\n                        line-height: 1rem;\n                        & font{\n                            \n                            \n                        }\n                    }\n                }\n            }\n        }\n        & #displayScoreElement{\n            margin-left: 10px;\n        }\n        & #nextBlockElement{\n            max-height:60px;\n            min-height:60px;\n            overflow: hidden;\n        }\n    }\n    #gridElement {\n        border: 2px solid #ffffff66;\n        border-radius: 0.5em;\n        padding-top:10px;\n        padding-bottom:10px;\n        margin: 5px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    \n        & p {\n            all: initial;\n            font-family: 'JetBrains Mono';\n            font-size: 1.5rem;\n            letter-spacing: -0.375rem;\n            line-height: 1.25rem;\n    \n            & :is(font.text-0) {\n                color: var(--tetris-game-font-0-color);\n            }\n        }\n    }\n    #gridElement.pause{\n        --tetris-game-font-0-color: var(--tetris-on-pause-color);\n        --tetris-game-font-1-color: var(--tetris-on-pause-color);\n        --tetris-game-font-2-color: var(--tetris-on-pause-color);\n        --tetris-game-font-3-color: var(--tetris-on-pause-color);\n        --tetris-game-font-4-color: var(--tetris-on-pause-color);\n        --tetris-game-font-5-color: var(--tetris-on-pause-color);\n        --tetris-game-font-6-color: var(--tetris-on-pause-color);\n        --tetris-game-font-7-color: var(--tetris-on-pause-color);\n        --tetris-game-font-8-color: var(--tetris-on-pause-color);\n        --tetris-game-font-9-color: var(--tetris-on-pause-color);\n    }\n\n    #pauseElement{\n        position: fixed;\n        border: 0.5rem solid #ffffffe5;\n        border-radius: 0.35rem;\n        top: 50%;\n        left: 50%;\n        padding-left: 1.5em;\n        padding-right: 1.5em;\n        text-align:center;\n        transform: translate(-50%, -50%);\n        background-color: #00000055;\n        width: 60%;\n\n        & h2 {\n            margin:0px;\n            padding-top: 10px;\n            padding-bottom: 10px;\n        }\n        & h5 {\n            margin:0px;\n            padding-bottom: 5px;\n        }\n        & p {\n            margin:0px;\n            font-size: 0.9rem;\n        }\n    }\n    #pauseElement.saving {\n        border: none;\n    }\n    </style>", b.appendChild(x), b.appendChild(u), b.appendChild(m), m.innerHTML = "\n    <p>press space-bar to</p>\n    <h2>Play</h2>\n    <p>the score is saved on sign-in</p>\n    ", x.appendChild(v); const r = document.createElement("div"); r.classList.add("next-wraper"), r.innerHTML = "<div>Next: </div>", r.appendChild(y), x.appendChild(r), v.textContent = "Score: xxxxxx", y.textContent = "xxxxxxx", M = P.isInit, d = 0, j(), _(), H(), T() } function R(n) { switch (M = n, n) { case P.isWaiting: M = P.Reset, m.innerHTML = "\n            <p>press space-bar to</p>\n            <h2>Play</h2>\n            <p>the score is saved on sign-in</p>\n            ", m.classList.remove("saving"), m.classList.remove("hide"); break; case P.Reset: p = 0, s = JSON.parse(JSON.stringify(t)), R(P.isPlaying); break; case P.isStarting: let n; m.classList.remove("saving"), u.classList.remove("pause"), m.classList.add("hide"), M = P.isPlaying, clearInterval(n); n = setInterval((function () { M === P.isPlaying && (h = !0, U(), T(), H()) }), g); break; case P.isPause: m.innerHTML = "\n            <h2>PAUSE</h2>\n            ", u.classList.add("pause"), m.classList.remove("hide"); break; case P.isPlaying: u.classList.remove("pause"), m.classList.add("hide"); break; case P.isGameOver: m.innerHTML = `\n            <p>the score is saved on sign-in</p>\n            <h2>Game Over</h2>\n            <h5>Score: ${p}</h5>\n\n            `, m.classList.remove("hide"), async function () { const n = i(); if (n) { M = P.SaveScore, m.innerHTML = ""; const e = document.createElement("x-loading"); e.title = "Waiting for score to save", m.appendChild(e), m.classList.add("saving"), n.score = p, await o.saveScore(n, (n => { if ("ok" === n.status) { const e = "SCOREBOARD", t = JSON.stringify(n.datas); localStorage.setItem(e, t), sessionStorage.setItem(e, "updated") } else m.innerHTML = `<div> Something went wrong! ðŸ˜¢</div>\n                <ul>\n                <li> Status: ${n.status}</li>\n                <li> Pleas contact @x-kalux on Discord</li>\n                </ul>`; M = P.isWaiting, R(P.isWaiting) })) } else M = P.Reset }() } } function T() { if (h) { for (var n = "", e = 0; e < s.length; e++)n += "<p>," + s[e].toString() + "<p>"; u.innerHTML = A(n) } } function D(n, e, t) { return n.replace(new RegExp(e, "g"), t) } function A(n) { return n = D(n, ",0", ",<font class='text-0'>,X</font>"), n = D(n, ",1", ",<font class='text-1'>,Ð®</font>"), n = D(n, ",2", ",<font class='text-2'>,Ð–</font>"), n = D(n, ",3", ",<font class='text-3'>,áºž</font>"), n = D(n, ",4", ",<font class='text-4'>,ÐŠ</font>"), n = D(n, ",5", ",<font class='text-5'>,Ð¯</font>"), n = D(n, ",6", ",<font class='text-6'>,â‚¬</font>"), n = D(n, ",7", ",<font class='text-7'>,Â¥</font>"), n = D(n, ",8", ",<font class='text-8'>,Â£</font>"), n = (n = D(n, ",9", ",<font class='text-9'>,#</font>")).replace(/,/g, " ") } function H() { if (h) { let n = `\n        <span >Score: ${p}</span>\n        `; v.innerHTML = n, n = "<pre class='next-block'>"; for (let e = 0; e < a.length; e++)n += "<p>," + a[e] + "</p>"; n += "</pre>", y.innerHTML = A(n) } } function _() { l.shape = n[c[d]], a = n[c[d + 1]], d += 1, d === c.length - 1 && j(), l.x = Math.floor(s[0].length / 2) - Math.ceil(l.shape[0].length / 2), l.y = 0 } function G() { for (var n = 0; n < l.shape.length; n++)for (var e = 0; e < l.shape[n].length; e++)0 !== l.shape[n][e] && (s[l.y + n][l.x + e] = 0) } function B(n, e) { for (var t = 0; t < e.shape.length; t++)for (var o = 0; o < e.shape[t].length; o++)if (0 !== e.shape[t][o] && (void 0 === n[e.y + t] || void 0 === n[e.y + t][e.x + o] || 0 !== n[e.y + t][e.x + o])) return !0; return !1 } function J() { for (var n = 0; n < l.shape.length; n++)for (var e = 0; e < l.shape[n].length; e++)0 !== l.shape[n][e] && (s[l.y + n][l.x + e] = l.shape[n][e]) } function W(n) { return n[0].map((function (e, t) { return n.map((function (n) { return n[t] })) })) } function N(n, e) { for (var t = 0; t < e; t++) { n = W(n); for (var o = 0; o < n.length; o++)n[o].reverse() } return n } function Y() { G(), l.shape = N(l.shape, 1), B(s, l) && (l.shape = N(l.shape, 3)), J() } function U() { G(), l.y++, B(s, l) && (l.y--, J(), _(), function () { for (var n = [], o = 0; o < s.length; o++) { for (var i = !1, a = 0; a < s[o].length; a++)0 === s[o][a] && (i = !0); i || n.push(o) } 1 == n.length ? p += 400 : 2 == n.length ? p += 1e3 : 3 == n.length ? p += 3e3 : n.length >= 4 && (p += 12e3); for (var r = n.length - 1; r >= 0; r--)s.splice(n[r], 1); for (; s.length < t.length;)s.unshift([...e]) }(), B(s, l) && (M = P.isGameOver, T(), J(), _(), T(), J(), _(), T(), R(P.isGameOver))), M === P.isPlaying && (J(), p++, H(), T()) } function z() { G(), l.x--, B(s, l) && l.x++, J(), T() } function $() { G(), l.x++, B(s, l) && l.x--, J() } function j() { c = []; let e = []; for (var t = 0; t < f; t++) { let o = q(n); for (; e.indexOf(o) >= 0;)o = q(n); c[t] = o, e.push(o) } d = 0 } function q(n) { var e = Object.keys(n); return e[function (n, e) { e = e || 1, n = n || 0, r = (9301 * r + 49297) % 233280; var t = r / 233280; return Math.floor(n + t * (e - n)) }(0, e.length)] } window.onkeydown = function (n) { "#game" === window.location.hash && (32 == n.keyCode ? M === P.isPlaying ? R(P.isPause) : M === P.isPause ? R(P.isPlaying) : M === P.isInit ? R(P.isStarting) : M === P.Reset && R(P.Reset) : 38 != n.keyCode && 87 != n.keyCode || M !== P.isPlaying ? 40 != n.keyCode && 83 != n.keyCode || M !== P.isPlaying ? 37 != n.keyCode && 65 != n.keyCode || M !== P.isPlaying ? 39 != n.keyCode && 68 != n.keyCode || M !== P.isPlaying || $() : z() : U() : Y(), T()) }; export { O as initTetris }