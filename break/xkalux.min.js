"use strict"; const AMPM = e => { let t = "AM"; return 0 == e && (e = 12), e > 12 && (e -= 12, t = "PM"), t }, EndTime = e => { const t = new Date(e); return { hour: t.getHours(), minutes: t.getMinutes(), seconds: t.getSeconds(), session: AMPM(t.getHours()) } }; class ELEMENT { constructor(e) { this.element = document.querySelector(e) } get value() { return this.element.value } set value(e) { this.element.value = e } get innerHTML() { if (null !== this.element) return this.element.innerHTML } set innerHTML(e) { null !== this.element && (this.element.innerHTML = e) } get classList() { if (null !== this.element) return this.element.classList } } class CountDown { initelement(e, t, n, s) { this.intervalTimer = null, this.secondsLeft = 0, this.timeLeftText = new ELEMENT(e), this.endTimeText = new ELEMENT(t), this.endTimeText.innerHTML = "", this.input = new ELEMENT(n), this.input.element.type = "number", this.button = new ELEMENT(s), this.displayTimeLeft(0) } constructor(e, t, n, s, i = (() => { }), l = !0) { this.mode = l, this.initelement(e, t, n, s), this.button.element?.addEventListener("click", (() => { this.setTime(this.input.element.value), i() })) } _setTime(e) { return this.mode && (e *= 60), clearInterval(this.intervalTimer), this.secondsLeft = e, e } setTime(e) { this._setTime(e), this.timer() } _calculateEndTime(e) { return Date.now() + 1e3 * e } timer() { const e = this._calculateEndTime(this.secondsLeft); this.displayTimeLeft(this.secondsLeft), this.displayEndTime(e), this.countdown(e) } displayTimeLeft(e) { const t = Math.floor(e % 3600 / 60), n = e % 60; this.timeLeftText.innerHTML = `<div class='timeleft-label'>Time Left</div><div class='countdown'><ul>\n            <li><span>${zeroPadded(t)}</span>Minutes</li>\n            <li class='seconds'><span>${zeroPadded(n)}</span>Seconds</li>\n            </ul></div>` } displayEndTime(e) { const t = EndTime(e); this.endTimeText.innerHTML = `End time: ${hourConvert(t.hour)}:${zeroPadded(t.minutes)}:${zeroPadded(t.seconds)} ${t.session}` } countdown(e) { this.intervalTimer = setInterval((() => { const t = Math.round((e - Date.now()) / 1e3); 0 === t && (this.endTimeText.innerHTML = "-"), t < 0 ? clearInterval(this.intervalTimer) : this.displayTimeLeft(t) }), 1e3) } } function zeroPadded(e) { return e < 10 ? `0${e}` : e } function hourConvert(e) { return e % 12 || 12 } const Clock = e => { const t = new ELEMENT(e), n = { showTime: () => { const e = new Date; let s = e.getHours(), i = e.getMinutes(), l = e.getSeconds(), r = AMPM(s); s = s < 10 ? "0" + s : s, i = i < 10 ? "0" + i : i, l = l < 10 ? "0" + l : l; const o = `<span class='clock-time'>${s}</span>:<span class='clock-time'>${i}</span>:<span class='clock-time'>${l}</span>${r}`; t.innerHTML = o, setTimeout(n.showTime, 1e3) } }; return n }